{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/_metronic/core/services/common.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/forms\";\n\nfunction AddEmailDialogComponent_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" please enter valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddEmailDialogComponent_mat_error_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" please enter valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddEmailDialogComponent_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" please enter valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddEmailDialogComponent_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" please enter valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddEmailDialogComponent_mat_error_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please select client \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddEmailDialogComponent_button_47_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function AddEmailDialogComponent_button_47_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.ClientAdd();\n    });\n    i0.ɵɵtext(1, \" Save \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r5.isSubmitted ? true : false);\n  }\n}\n\nfunction AddEmailDialogComponent_button_48_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function AddEmailDialogComponent_button_48_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.clientUpdate();\n    });\n    i0.ɵɵtext(1, \" Update \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\n\nexport let AddEmailDialogComponent = /*#__PURE__*/(() => {\n  class AddEmailDialogComponent {\n    /**\r\n     * Component constructor\r\n     *\r\n     * @param dialogRef: MatDialogRef<DeleteEntityDialogComponent>\r\n     * @param userIdObj: any\r\n     */\n    constructor(commonService, dialogRef, toastr, fb, userIdObj) {\n      this.commonService = commonService;\n      this.dialogRef = dialogRef;\n      this.toastr = toastr;\n      this.fb = fb;\n      this.userIdObj = userIdObj;\n      this.permissionArr = [{\n        value: 'Yes',\n        key: 1\n      }, {\n        value: 'No',\n        key: 0\n      }];\n      this.columnNameArr = [];\n      this.dropdownList = [];\n      this.selectedItems = [];\n      this.is_edit = 0;\n      this.is_delete = 0;\n      this.is_allowed_add_client = 0;\n      this.checkPermissionArr = {};\n      this.requiredField = false;\n      this.initForm();\n    }\n    /**\r\n     * On init\r\n     */\n\n\n    ngOnInit() {\n      this.dropdownList = this.userIdObj.clientArr;\n\n      if (this.userIdObj.id && this.userIdObj.email) {\n        this.clientEmailId = this.userIdObj.id;\n        this.is_edit = this.userIdObj.is_edit;\n        this.is_delete = this.userIdObj.is_delete;\n        this.is_allowed_add_client = this.userIdObj.is_allowed_add_client; // this.selectedItems = this.userIdObj.user_client_id;\n\n        this.clientEmail.patchValue(this.userIdObj); // this.getClientList();\n\n        if (this.userIdObj.user_client_id != \"\" && this.userIdObj.user_client_id != null) {\n          this.selectColumnType(this.userIdObj.user_client_id);\n        }\n      }\n\n      this.dropdownSettings = {\n        singleSelection: false,\n        idField: 'id',\n        textField: 'name',\n        selectAllText: 'Select All Clients',\n        unSelectAllText: 'UnSelect All Clients',\n        allowSearchFilter: true\n      };\n      this.showClientDropdown = this.userIdObj.edit;\n    }\n\n    get f() {\n      return this.clientEmail.controls;\n    }\n    /**\r\n     * Close dialog with false result\r\n     */\n\n\n    cancel() {\n      this.dialogRef.close();\n    }\n\n    initForm() {\n      this.clientEmail = this.fb.group({\n        email: ['', Validators.compose([Validators.required, Validators.email, Validators.minLength(3), Validators.maxLength(320)])]\n      });\n    }\n    /**\r\n     * Checking control validation\r\n     *\r\n     * @param controlName: string => Equals to formControlName\r\n     * @param validationType: string => Equals to valitors name\r\n     */\n\n\n    isControlHasError(controlName, validationType, type, index, name) {\n      const control = this.clientEmail.controls[controlName];\n\n      if (!control) {\n        return false;\n      }\n\n      const result = control.hasError(validationType) && (control.dirty || control.touched);\n      return result;\n    }\n    /**\r\n     * Close dialog with true result\r\n     */\n\n\n    ClientAdd() {\n      if (this.selectedItems.length > 0) {\n        this.isSubmitted = true;\n        const controls = this.clientEmail.controls; // check form\n\n        if (this.clientEmail.invalid) {\n          Object.keys(controls).forEach(controlName => controls[controlName].markAsTouched());\n          this.isSubmitted = false;\n          return;\n        }\n\n        this.requiredField = false;\n        this.clientEmail.value.parent_user_id = this.userIdObj.userId;\n        let column_type = [];\n        this.selectedItems.forEach(function (obj) {\n          column_type.push(obj.id);\n        });\n        this.clientEmail.value.user_client_id = column_type.toString();\n        this.clientEmail.value.is_edit = this.is_edit;\n        this.clientEmail.value.is_delete = this.is_delete;\n        this.clientEmail.value.is_allowed_add_client = this.is_allowed_add_client;\n        this.commonService.createClient(this.clientEmail.value).subscribe(res => {\n          this.isSubmitted = false;\n          let resArr = res;\n\n          if (resArr.message === 'success' || resArr.status === 1) {\n            this.toastr.success(resArr.message, 'Success!');\n          } else {\n            this.toastr.error(resArr.message.id, 'Error!');\n          }\n\n          this.dialogRef.close(true);\n        }, err => {\n          this.isSubmitted = false;\n        });\n      } else {\n        this.requiredField = true;\n      }\n    }\n\n    clientUpdate() {\n      if (this.selectedItems.length > 0) {\n        const controls = this.clientEmail.controls; // check form\n\n        if (this.clientEmail.invalid) {\n          Object.keys(controls).forEach(controlName => controls[controlName].markAsTouched());\n          return;\n        }\n\n        this.clientEmail.value.parent_user_id = this.userIdObj.userId;\n        this.clientEmail.value.is_edit = this.is_edit;\n        this.clientEmail.value.is_delete = this.is_delete;\n        this.clientEmail.value.is_allowed_add_client = this.is_allowed_add_client;\n        let column_type = [];\n        this.selectedItems.forEach(function (obj) {\n          column_type.push(obj.id);\n        });\n        this.clientEmail.value.user_client_id = column_type.toString(); // this.clientEmail.value.columnNameArr = this.columnNameArr;\n\n        this.commonService.updateClient(this.clientEmail.value, this.clientEmailId).subscribe(res => {\n          let resArr = res;\n\n          if (resArr.message === 'success' || resArr.status === 1) {\n            this.requiredField = false;\n            this.toastr.success(resArr.message, 'Success!');\n          } else {\n            this.toastr.error(resArr.message.id, 'Error!');\n          }\n\n          this.dialogRef.close(true);\n        });\n      } else {\n        this.requiredField = true;\n      }\n    }\n    /** selected value stored in the multi select */\n\n\n    selectColumnType(columnTypeArr) {\n      for (let i = 0; i < this.dropdownList.length; i++) {\n        let Id = this.dropdownList[i].id;\n\n        if (columnTypeArr.includes(Id.toString())) {\n          this.selectedItems.push(this.dropdownList[i]);\n        }\n      }\n    }\n\n    onFilterChange(item) {}\n\n    onDropDownClose(item) {}\n\n    onItemSelect(item) {\n      this.requiredField = false;\n      this.addSelectedClient(item.id);\n    }\n\n    onDeSelect(item) {\n      let id = item.id;\n      let index = this.columnNameArr.indexOf(id);\n\n      if (index != -1) {\n        this.columnNameArr.splice(index, 1);\n      }\n    }\n\n    onSelectAll(item) {\n      if (item.length > 0) {\n        this.requiredField = false;\n\n        for (let i = 0; i < item.length; i++) {\n          this.addSelectedClient(item[i].id);\n        }\n      }\n    }\n\n    onDeSelectAll(item) {\n      this.requiredField = true;\n      this.columnNameArr = [];\n    }\n\n    addSelectedClient(id) {\n      let index = this.columnNameArr.indexOf(id);\n\n      if (index == -1) {\n        this.columnNameArr.push(id);\n      }\n    }\n    /** Get client list detail */\n\n\n    getClientList() {\n      this.commonService.getClienttypeListbyclientId(this.clientEmailId).subscribe(response => {\n        this.dropdownList = response.items;\n        this.selectColumnType(this.dropdownList);\n      });\n    }\n\n    selectModule(id, $event) {\n      if (id == 1) {\n        this.is_allowed_add_client = $event == true ? 1 : 0;\n      } else if (id == 2) {\n        this.is_edit = $event == true ? 1 : 0;\n      } else {\n        this.is_delete = $event == true ? 1 : 0;\n      }\n    }\n\n  }\n\n  AddEmailDialogComponent.ɵfac = function AddEmailDialogComponent_Factory(t) {\n    return new (t || AddEmailDialogComponent)(i0.ɵɵdirectiveInject(i1.CommonService), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  AddEmailDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEmailDialogComponent,\n    selectors: [[\"app-add-email-dialog\"]],\n    decls: 49,\n    vars: 19,\n    consts: [[1, \"model_max\"], [1, \"kt-portlet__head-progress\"], [1, \"modal-header\"], [1, \"modal-title\", \"text-white\"], [1, \"kt-portlet__head-icon\", \"kt-hide\"], [1, \"la\", \"la-gear\"], [1, \"kt-form\"], [1, \"form\", \"form-label-left\", 3, \"formGroup\"], [1, \"modal-body\"], [1, \"form-group\", \"row\"], [\"for\", \"example-text-input\", 1, \"col-xl-3\", \"col-lg-3\", \"col-form-label\"], [1, \"text-danger\"], [1, \"col-9\"], [\"appAutofocus\", \"\", \"type\", \"email\", \"formControlName\", \"email\", \"id\", \"email\", \"placeholder\", \"Please Enter Email\", \"title\", \"Email\", 1, \"form-control\", \"form-control-lg\"], [4, \"ngIf\"], [3, \"placeholder\", \"settings\", \"data\", \"ngModel\", \"ngModelOptions\", \"required\", \"ngModelChange\", \"onFilterChange\", \"onDropDownClose\", \"onSelect\", \"onDeSelect\", \"onSelectAll\", \"onDeSelectAll\"], [\"color\", \"primary\", 1, \"permission-checkbox\", 3, \"checked\", \"change\"], [1, \"modal-footer\", \"text-right\"], [1, \"kt-form__actions\", \"kt-form__actions--sm\"], [\"mat-button\", \"\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [\"mat-button\", \"\", \"color\", \"primary\", \"class\", \" btn btn-green text-white\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-button\", \"\", \"color\", \"primary\", \"class\", \" btn btn-green text-white\", 3, \"click\", 4, \"ngIf\"], [\"mat-button\", \"\", \"color\", \"primary\", 1, \"btn\", \"btn-green\", \"text-white\", 3, \"disabled\", \"click\"], [\"mat-button\", \"\", \"color\", \"primary\", 1, \"btn\", \"btn-green\", \"text-white\", 3, \"click\"]],\n    template: function AddEmailDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\");\n        i0.ɵɵelement(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"h3\", 3);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"span\", 4);\n        i0.ɵɵelement(7, \"em\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"form\", 7);\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵelementStart(11, \"div\", 9);\n        i0.ɵɵelementStart(12, \"label\", 10);\n        i0.ɵɵtext(13, \"Email \");\n        i0.ɵɵelementStart(14, \"span\", 11);\n        i0.ɵɵtext(15, \"*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 12);\n        i0.ɵɵelement(17, \"input\", 13);\n        i0.ɵɵtemplate(18, AddEmailDialogComponent_mat_error_18_Template, 2, 0, \"mat-error\", 14);\n        i0.ɵɵtemplate(19, AddEmailDialogComponent_mat_error_19_Template, 2, 0, \"mat-error\", 14);\n        i0.ɵɵtemplate(20, AddEmailDialogComponent_mat_error_20_Template, 2, 0, \"mat-error\", 14);\n        i0.ɵɵtemplate(21, AddEmailDialogComponent_mat_error_21_Template, 2, 0, \"mat-error\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 9);\n        i0.ɵɵelementStart(23, \"label\", 10);\n        i0.ɵɵtext(24, \"Select Clients \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 12);\n        i0.ɵɵelementStart(26, \"ng-multiselect-dropdown\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEmailDialogComponent_Template_ng_multiselect_dropdown_ngModelChange_26_listener($event) {\n          return ctx.selectedItems = $event;\n        })(\"onFilterChange\", function AddEmailDialogComponent_Template_ng_multiselect_dropdown_onFilterChange_26_listener($event) {\n          return ctx.onFilterChange($event);\n        })(\"onDropDownClose\", function AddEmailDialogComponent_Template_ng_multiselect_dropdown_onDropDownClose_26_listener($event) {\n          return ctx.onDropDownClose($event);\n        })(\"onSelect\", function AddEmailDialogComponent_Template_ng_multiselect_dropdown_onSelect_26_listener($event) {\n          return ctx.onItemSelect($event);\n        })(\"onDeSelect\", function AddEmailDialogComponent_Template_ng_multiselect_dropdown_onDeSelect_26_listener($event) {\n          return ctx.onDeSelect($event);\n        })(\"onSelectAll\", function AddEmailDialogComponent_Template_ng_multiselect_dropdown_onSelectAll_26_listener($event) {\n          return ctx.onSelectAll($event);\n        })(\"onDeSelectAll\", function AddEmailDialogComponent_Template_ng_multiselect_dropdown_onDeSelectAll_26_listener($event) {\n          return ctx.onDeSelectAll($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(27, AddEmailDialogComponent_mat_error_27_Template, 2, 0, \"mat-error\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 9);\n        i0.ɵɵelementStart(29, \"label\", 10);\n        i0.ɵɵtext(30, \" Permission \");\n        i0.ɵɵelementStart(31, \"span\", 11);\n        i0.ɵɵtext(32, \"*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 12);\n        i0.ɵɵelementStart(34, \"mat-checkbox\", 16);\n        i0.ɵɵlistener(\"change\", function AddEmailDialogComponent_Template_mat_checkbox_change_34_listener($event) {\n          return ctx.selectModule(1, $event.checked);\n        });\n        i0.ɵɵtext(35, \" Add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(36, \" \\u00A0\\u00A0 \");\n        i0.ɵɵelementStart(37, \"mat-checkbox\", 16);\n        i0.ɵɵlistener(\"change\", function AddEmailDialogComponent_Template_mat_checkbox_change_37_listener($event) {\n          return ctx.selectModule(2, $event.checked);\n        });\n        i0.ɵɵtext(38, \" Edit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(39, \" \\u00A0\\u00A0 \");\n        i0.ɵɵelementStart(40, \"mat-checkbox\", 16);\n        i0.ɵɵlistener(\"change\", function AddEmailDialogComponent_Template_mat_checkbox_change_40_listener($event) {\n          return ctx.selectModule(3, $event.checked);\n        });\n        i0.ɵɵtext(41, \" Delete\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 17);\n        i0.ɵɵelementStart(43, \"div\", 18);\n        i0.ɵɵelementStart(44, \"button\", 19);\n        i0.ɵɵlistener(\"click\", function AddEmailDialogComponent_Template_button_click_44_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(45, \" Cancel \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(46, \" \\u00A0\\u00A0 \");\n        i0.ɵɵtemplate(47, AddEmailDialogComponent_button_47_Template, 2, 1, \"button\", 20);\n        i0.ɵɵtemplate(48, AddEmailDialogComponent_button_48_Template, 2, 0, \"button\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"\", !ctx.clientEmailId ? \"Add New User\" : \"Update User\", \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.clientEmail);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.isControlHasError(\"email\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isControlHasError(\"email\", \"email\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isControlHasError(\"email\", \"minLength\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isControlHasError(\"email\", \"maxLength\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"placeholder\", \"Please select clients\")(\"settings\", ctx.dropdownSettings)(\"data\", ctx.dropdownList)(\"ngModel\", ctx.selectedItems)(\"ngModelOptions\", i0.ɵɵpureFunction0(18, _c0))(\"required\", ctx.requiredField);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.requiredField);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"checked\", ctx.is_allowed_add_client == 1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"checked\", ctx.is_edit == 1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"checked\", ctx.is_delete == 1);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", !ctx.clientEmailId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.clientEmailId);\n      }\n    },\n    styles: [\".modal-header[_ngcontent-%COMP%]{background:#12121b}.modal-body[_ngcontent-%COMP%], .modal-footer[_ngcontent-%COMP%]{background:#1b1b28;color:#a2a3b7}\"]\n  });\n  return AddEmailDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}