{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { RegexEnum } from 'src/app/constant/regex';\nimport jwt_decode from 'jwt-decode';\nimport { projectName } from '../../../constant/constant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../_services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/platform-browser\";\nimport * as i5 from \"ngx-toastr\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@ngx-translate/core\";\n\nfunction LoginComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"AUTH.VALIDATION.REQUIRED_FIELD\"), \" \");\n  }\n}\n\nfunction LoginComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"AUTH.VALIDATION.INVALID_FIELD\"), \" \");\n  }\n}\n\nfunction LoginComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"AUTH.VALIDATION.MIN_LENGTH_FIELD\"), \" 3 \");\n  }\n}\n\nfunction LoginComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"AUTH.VALIDATION.MAX_LENGTH_FIELD\"), \" 320 \");\n  }\n}\n\nfunction LoginComponent_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"AUTH.VALIDATION.REQUIRED_FIELD\"), \" \");\n  }\n}\n\nfunction LoginComponent_mat_error_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"AUTH.VALIDATION.INVALID_PASSWORD\"), \" \");\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, authService, route, titleService, router, toastr) {\n      this.fb = fb;\n      this.authService = authService;\n      this.route = route;\n      this.titleService = titleService;\n      this.router = router;\n      this.toastr = toastr;\n      this.defaultAuth = {\n        email: 'jaydeep@devit.com',\n        password: 'passwrd123'\n      };\n      this.myRecaptcha = false; // private fields\n\n      this.unsubscribe = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\n\n      this.isLoading$ = this.authService.isLoading$; // redirect to home if already logged in\n\n      if (this.authService.currentUserValue) {\n        this.router.navigate(['/']);\n      }\n    }\n\n    ngOnInit() {\n      this.titleService.setTitle(projectName + '| Login');\n      this.initForm(); // get return url from route parameters or default to '/'\n\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'.toString()] || '/';\n    } // convenience getter for easy access to form fields\n\n\n    get f() {\n      return this.loginForm.controls;\n    }\n\n    initForm() {\n      this.loginForm = this.fb.group({\n        email: ['', Validators.compose([Validators.required, Validators.email, Validators.pattern(RegexEnum.email), Validators.minLength(3), Validators.maxLength(320) // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\n        ])],\n        password: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(100) // Validators.pattern(RegexEnum.passwordValidation)\n        ])]\n      });\n    }\n\n    submit() {\n      this.hasError = false;\n      const controls = this.loginForm.controls;\n\n      if (this.loginForm.invalid) {\n        Object.keys(controls).forEach(controlName => controls[controlName].markAsTouched());\n        return;\n      }\n\n      const loginSubscr = this.authService.login(this.f.email.value, this.f.password.value).pipe(first()).subscribe(user => {\n        if (user && user.result) {\n          this.token = user.result.token;\n          this.tokenData = jwt_decode(this.token);\n          this.router.navigate(['/admin/dashboard']);\n        } else {\n          this.hasError = true;\n        }\n      });\n      this.unsubscribe.push(loginSubscr);\n    }\n    /**\r\n     * Checking control validation\r\n     *\r\n     * @param controlName: string => Equals to formControlName\r\n     * @param validationType: string => Equals to valitors name\r\n     */\n\n\n    isControlHasError(controlName, validationType) {\n      const control = this.loginForm.controls[controlName];\n\n      if (!control) {\n        return false;\n      }\n\n      const result = control.hasError(validationType) && (control.dirty || control.touched);\n      return result;\n    }\n    /**\r\n     * Toggle Password\r\n     */\n\n\n    togglePassword() {\n      this.show = !this.show;\n    }\n\n    ngOnDestroy() {\n      this.unsubscribe.forEach(sb => sb.unsubscribe());\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.Title), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i5.ToastrService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 36,\n    vars: 19,\n    consts: [[1, \"wrapper\"], [1, \"d-lg-flex\", \"half\"], [1, \"bg\", \"order-1\", \"order-md-2\", \"w-halfvw\", 2, \"background-image\", \"url('assets/media/logos/login-bg.png')\"], [1, \"contents\", \"order-2\", \"order-md-2\", \"w-halfvw\"], [1, \"container\"], [1, \"row\", \"align-items-center\", \"justify-content-center\"], [1, \"col-md-7\", \"m-3\"], [\"novalidate\", \"novalidate\", \"id\", \"kt_login_signin_form\", 1, \"mt-5\", \"p-10\", 3, \"formGroup\", \"ngSubmit\"], [\"f\", \"\"], [1, \"form-group\", \"first\"], [\"type\", \"text\", \"type\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", \"autocomplete\", \"off\", 1, \"form-control\", 3, \"placeholder\"], [4, \"ngIf\"], [1, \"form-group\", \"last\", \"mb-3\"], [\"type\", \"password\", \"name\", \"password\", \"autocomplete\", \"off\", \"formControlName\", \"password\", \"id\", \"password\", 1, \"form-control\", 3, \"type\", \"placeholder\"], [1, \"eye-icon\", \"p\", 3, \"click\"], [1, \"d-flex\", \"mb-5\", \"mt-5\", \"mt-18\", \"align-items-center\"], [1, \"icheck-primary\", \"d-inline\", \"ml-2\"], [\"type\", \"checkbox\", \"value\", \"\", \"name\", \"todo1\", \"id\", \"todoCheck1\", 1, \"m-3\"], [\"for\", \"todoCheck1\"], [1, \"caption\"], [1, \"ml-auto\", \"caption\"], [\"routerLink\", \"/auth/forgot-password\", 1, \"caption\"], [1, \"text-center\"], [\"type\", \"submit\", \"id\", \"kt_login_signin_submit\", 1, \"btn\", \"btn-success\", \"bg\", 3, \"disabled\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelement(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵelementStart(6, \"div\", 6);\n        i0.ɵɵelementStart(7, \"form\", 7, 8);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(9, \"div\", 9);\n        i0.ɵɵelement(10, \"input\", 10);\n        i0.ɵɵpipe(11, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, LoginComponent_mat_error_12_Template, 3, 3, \"mat-error\", 11);\n        i0.ɵɵtemplate(13, LoginComponent_mat_error_13_Template, 3, 3, \"mat-error\", 11);\n        i0.ɵɵtemplate(14, LoginComponent_mat_error_14_Template, 3, 3, \"mat-error\", 11);\n        i0.ɵɵtemplate(15, LoginComponent_mat_error_15_Template, 3, 3, \"mat-error\", 11);\n        i0.ɵɵelementStart(16, \"div\", 12);\n        i0.ɵɵelement(17, \"input\", 13);\n        i0.ɵɵpipe(18, \"translate\");\n        i0.ɵɵelementStart(19, \"mat-icon\", 14);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_mat_icon_click_19_listener() {\n          return ctx.togglePassword();\n        });\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, LoginComponent_mat_error_21_Template, 3, 3, \"mat-error\", 11);\n        i0.ɵɵtemplate(22, LoginComponent_mat_error_22_Template, 3, 3, \"mat-error\", 11);\n        i0.ɵɵelementStart(23, \"div\", 15);\n        i0.ɵɵelementStart(24, \"div\", 16);\n        i0.ɵɵelement(25, \"input\", 17);\n        i0.ɵɵelement(26, \"label\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"span\", 19);\n        i0.ɵɵtext(28, \"Remember me\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"span\", 20);\n        i0.ɵɵelementStart(30, \"a\", 21);\n        i0.ɵɵtext(31, \"Forgot Password?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 22);\n        i0.ɵɵelementStart(33, \"button\", 23);\n        i0.ɵɵtext(34);\n        i0.ɵɵpipe(35, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(8);\n\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(11, 13, \"AUTH.INPUT.EMAIL\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isControlHasError(\"email\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isControlHasError(\"email\", \"pattern\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isControlHasError(\"email\", \"minLength\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isControlHasError(\"email\", \"maxLength\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(18, 15, \"AUTH.INPUT.PASSWORD\"));\n        i0.ɵɵproperty(\"type\", ctx.show ? \"text\" : \"password\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"\", !ctx.show ? \"visibility_off\" : \"visibility\", \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isControlHasError(\"password\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isControlHasError(\"password\", \"pattern\"));\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(35, 17, \"AUTH.LOGIN.BUTTON\"), \" \");\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i6.NgIf, i7.MatIcon, i3.RouterLinkWithHref, i8.MatError],\n    pipes: [i9.TranslatePipe],\n    styles: [\"[_nghost-%COMP%]{width:100%}[_nghost-%COMP%]   .wrapper[_ngcontent-%COMP%]{margin:0!important;padding:0!important;padding-top:0}[_nghost-%COMP%]   .login-form[_ngcontent-%COMP%]{width:100%;max-width:500px;margin:0 auto}[_nghost-%COMP%]   .login-form[_ngcontent-%COMP%]   .mat-form-field[_ngcontent-%COMP%]{width:100%}.password-input[_ngcontent-%COMP%]{position:relative}.password-input[_ngcontent-%COMP%]   .eye-icon[_ngcontent-%COMP%]{position:absolute;right:11px;top:16px;cursor:pointer;color:#b5b5c3}.login-form[_ngcontent-%COMP%]{background:#61605c80;padding:19px;border-radius:18px}.login-form[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]{background-color:#2d2d2d;border:none;color:#b5b5c3}.login-form[_ngcontent-%COMP%]   .login-btn[_ngcontent-%COMP%]{background:#3699ff;border-color:#3699ff;color:#fff;width:100%}.text-white[_ngcontent-%COMP%]{color:#fff!important}re-captcha.is-invalid[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{border:1px solid #dc3545!important;border-radius:.2rem}body[_ngcontent-%COMP%]{font-family:Montserrat,sans-serif;font-weight:400;font-size:14px}.content[_ngcontent-%COMP%]{padding:7rem 0}.contents[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{margin-bottom:50px}.w-halfvw[_ngcontent-%COMP%]{width:50vw}.half[_ngcontent-%COMP%], .half[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%] > .row[_ngcontent-%COMP%]{height:100vh}@media (max-width: 991.98px){.half[_ngcontent-%COMP%]   .bg[_ngcontent-%COMP%]{height:none;width:100%;max-width:500px;margin:0 auto}}.half[_ngcontent-%COMP%]   .contents[_ngcontent-%COMP%]{background:#fff}@media (max-width: 1199.98px){.half[_ngcontent-%COMP%]   .contents[_ngcontent-%COMP%], .half[_ngcontent-%COMP%]   .bg[_ngcontent-%COMP%]{width:100%}}.half[_ngcontent-%COMP%]   .contents[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%], .half[_ngcontent-%COMP%]   .bg[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]{border:none;height:54px;padding-left:0;border-bottom:1px solid #e9e9f0;border-radius:0}.half[_ngcontent-%COMP%]   .contents[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]:active, .half[_ngcontent-%COMP%]   .contents[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]:focus, .half[_ngcontent-%COMP%]   .bg[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]:active, .half[_ngcontent-%COMP%]   .bg[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]:focus{outline:none;border-bottom:1px solid #002559}.form-control[_ngcontent-%COMP%]{position:relative}.half[_ngcontent-%COMP%]   .bg[_ngcontent-%COMP%]{background-size:cover;background-position:center}.half[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#43425d;text-decoration:none;font-weight:500}.half[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{color:#002559;text-decoration:none;text-decoration:underline}.half[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{height:50px;padding-left:70px;padding-right:70px;background:#002559;border:0;border-radius:4px;margin-top:30px}.half[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]:hover{background:#0b3957}.half[_ngcontent-%COMP%]   .forgot-pass[_ngcontent-%COMP%]{position:relative;top:2px;font-size:14px;font-weight:500}.caption[_ngcontent-%COMP%]{font-weight:500}.bg[_ngcontent-%COMP%]{background-color:#25507c!important}.p[_ngcontent-%COMP%]{position:absolute;top:145px;right:55px}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}