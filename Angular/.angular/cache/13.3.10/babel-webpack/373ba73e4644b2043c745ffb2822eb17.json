{"ast":null,"code":"import jwt_decode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let AclService = /*#__PURE__*/(() => {\n  class AclService {\n    constructor(router) {\n      this.router = router;\n      this.userPermissionList = [];\n      this.userModule = [];\n      this.premission = false;\n      this.premissionCheck = false;\n      this.objPermission = 0;\n      this.datamoduleArr = 0;\n      this.isDataModuleArray = false;\n      this.authToken = localStorage.getItem('authToken');\n      this.token = this.authToken.split(' ')[1];\n      this.getDecodedAccessToken();\n    }\n\n    checkPermission(data) {\n      this.userPermissionList = JSON.parse(localStorage.getItem('permissions'));\n\n      if (this.userPermissionList.length > 0) {\n        this.userModule = this.userPermissionList;\n\n        for (let i = 0; i < this.userModule.length; i++) {\n          if (typeof data.module === 'string') {\n            if (data.module.toLowerCase() === this.userModule[i].Module.module_name.toLowerCase()) {\n              switch (data.permission) {\n                case 'create':\n                  this.premission = this.userModule[i].create_permission;\n                  this.premissionCheck = true;\n                  break;\n\n                case 'read':\n                  this.premission = this.userModule[i].read_permission;\n                  this.premissionCheck = true;\n                  break;\n\n                case 'update':\n                  this.premission = this.userModule[i].update_permission;\n                  this.premissionCheck = true;\n                  break;\n\n                case 'delete':\n                  this.premission = this.userModule[i].delete_permission;\n                  this.premissionCheck = true;\n                  break;\n\n                case 'menu':\n                  this.premission = this.userModule[i].menu_display;\n                  this.premissionCheck = true;\n                  break;\n\n                default:\n              }\n            }\n\n            this.isDataModuleArray = false;\n            this.datamoduleArr = 0;\n            this.objPermission = 0;\n          } else {\n            this.isDataModuleArray = true;\n            this.datamoduleArr = data.module.length;\n\n            for (let k = 0; k < data.module.length; k++) {\n              if (data.module[k].toLowerCase() === this.userModule[i].Module.module_name.toLowerCase()) {\n                if (data.permission === 'menu') {\n                  // case 'menu':\n                  if (this.userModule[i].menu_display) {\n                    this.objPermission++;\n                  } // \tbreak;\n                  // default:\n\n                }\n              }\n            }\n          }\n        }\n\n        if (this.isDataModuleArray) {\n          if (this.datamoduleArr > 0) {\n            if (this.objPermission > 0) {\n              if (this.objPermission === this.datamoduleArr) {\n                this.premission = true;\n              }\n            } else {\n              this.premission = false;\n            }\n          }\n        }\n      }\n\n      return this.premission;\n    }\n\n    getDecodedAccessToken() {\n      this.authToken = localStorage.getItem('authToken');\n      this.token = this.authToken; // this.authToken = localStorage.getItem('authToken');\n      // this.token = this.authToken.split(' ')[1];\n\n      return jwt_decode(this.token);\n    }\n\n  }\n\n  AclService.ɵfac = function AclService_Factory(t) {\n    return new (t || AclService)(i0.ɵɵinject(i1.Router));\n  };\n\n  AclService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AclService,\n    factory: AclService.ɵfac,\n    providedIn: 'root'\n  });\n  return AclService;\n})();","map":null,"metadata":{},"sourceType":"module"}