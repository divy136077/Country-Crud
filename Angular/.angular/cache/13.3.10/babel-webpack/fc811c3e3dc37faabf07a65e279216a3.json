{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { ConfirmPasswordValidator } from '../../auth/registration/confirm-password.validator';\nimport { API_ROUTES } from 'src/app/constant/constant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../auth\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/_metronic/core/services/common.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction ChangePasswordComponent_ng_container_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 18);\n    i0.ɵɵelement(2, \"div\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction ChangePasswordComponent_ng_container_0_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \"Old Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ChangePasswordComponent_ng_container_0_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \"New password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ChangePasswordComponent_ng_container_0_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \"'Passsword' and 'Confirm Password' didn't match.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ChangePasswordComponent_ng_container_0_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \"Confirm password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ChangePasswordComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 1);\n    i0.ɵɵtemplate(2, ChangePasswordComponent_ng_container_0_ng_container_2_Template, 3, 0, \"ng-container\", 0);\n    i0.ɵɵpipe(3, \"async\");\n    i0.ɵɵelementStart(4, \"div\", 2);\n    i0.ɵɵelementStart(5, \"div\", 3);\n    i0.ɵɵelementStart(6, \"h3\", 4);\n    i0.ɵɵtext(7, \"Change Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\", 5);\n    i0.ɵɵtext(9, \"Change your account password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 6);\n    i0.ɵɵelementStart(11, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ChangePasswordComponent_ng_container_0_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.save();\n    });\n    i0.ɵɵtext(12, \"Save Changes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ChangePasswordComponent_ng_container_0_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.cancel();\n    });\n    i0.ɵɵtext(14, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 9);\n    i0.ɵɵelementStart(16, \"div\", 10);\n    i0.ɵɵelementStart(17, \"div\", 11);\n    i0.ɵɵelementStart(18, \"label\", 12);\n    i0.ɵɵtext(19, \"Current Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"div\", 13);\n    i0.ɵɵelement(21, \"input\", 14);\n    i0.ɵɵtemplate(22, ChangePasswordComponent_ng_container_0_div_22_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 11);\n    i0.ɵɵelementStart(24, \"label\", 12);\n    i0.ɵɵtext(25, \"New Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"div\", 13);\n    i0.ɵɵelement(27, \"input\", 16);\n    i0.ɵɵtemplate(28, ChangePasswordComponent_ng_container_0_div_28_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"div\", 11);\n    i0.ɵɵelementStart(30, \"label\", 12);\n    i0.ɵɵtext(31, \"Verify Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"div\", 13);\n    i0.ɵɵelement(33, \"input\", 17);\n    i0.ɵɵtemplate(34, ChangePasswordComponent_ng_container_0_div_34_Template, 2, 0, \"div\", 15);\n    i0.ɵɵtemplate(35, ChangePasswordComponent_ng_container_0_div_35_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.formGroup);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 19, ctx_r0.isLoading$));\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.formGroup.invalid);\n    i0.ɵɵadvance(10);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r0.isControlInvalid(\"currentPassword\"))(\"is-valid\", ctx_r0.isControlValid(\"currentPassword\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.controlHasError(\"required\", \"currentPassword\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r0.isControlInvalid(\"password\"))(\"is-valid\", ctx_r0.isControlValid(\"password\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.controlHasError(\"required\", \"password\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r0.isControlInvalid(\"cPassword\"))(\"is-valid\", ctx_r0.isControlValid(\"cPassword\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.controlHasError(\"ConfirmPassword\", \"cPassword\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.controlHasError(\"required\", \"cPassword\"));\n  }\n}\n\nexport let ChangePasswordComponent = /*#__PURE__*/(() => {\n  class ChangePasswordComponent {\n    constructor(userService, fb, commonService) {\n      this.userService = userService;\n      this.fb = fb;\n      this.commonService = commonService;\n      this.subscriptions = [];\n      this.moduleNameServiceRoute = API_ROUTES.USER;\n      this.isLoading$ = this.userService.isLoadingSubject.asObservable();\n    }\n\n    ngOnInit() {\n      const sb = this.userService.currentUserSubject.asObservable().pipe(first(user => !!user)).subscribe(user => {\n        this.user = Object.assign({}, user);\n        this.firstUserState = Object.assign({}, user);\n        this.loadForm();\n      });\n      this.subscriptions.push(sb);\n    }\n\n    ngOnDestroy() {\n      this.subscriptions.forEach(sb => sb.unsubscribe());\n    }\n\n    loadForm() {\n      this.formGroup = this.fb.group({\n        currentPassword: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(100), Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\" !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\"])[A-Za-z\\d\" !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\"]{8,15}$/)])],\n        password: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(100), Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\" !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\"])[A-Za-z\\d\" !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\"]{8,15}$/)])],\n        cPassword: ['', Validators.required]\n      }, {\n        validator: ConfirmPasswordValidator.MatchPassword\n      });\n    }\n\n    save() {\n      this.formGroup.markAllAsTouched();\n\n      if (!this.formGroup.valid) {\n        return;\n      }\n\n      this.user.password = this.formGroup.value.password;\n      const data = {\n        newPassword: this.formGroup.value.password,\n        oldPassword: this.formGroup.value.currentPassword,\n        confirmPassword: this.formGroup.value.cPassword,\n        user_id: this.user.id\n      };\n      this.commonService.changePassword(data, this.moduleNameServiceRoute).subscribe(res => {\n        this.formGroup.reset();\n      });\n    }\n\n    cancel() {\n      this.user = Object.assign({}, this.firstUserState);\n      this.loadForm();\n    } // helpers for View\n\n\n    isControlValid(controlName) {\n      const control = this.formGroup.controls[controlName];\n      return control.valid && (control.dirty || control.touched);\n    }\n\n    isControlInvalid(controlName) {\n      const control = this.formGroup.controls[controlName];\n      return control.invalid && (control.dirty || control.touched);\n    }\n\n    controlHasError(validation, controlName) {\n      const control = this.formGroup.controls[controlName];\n      return control.hasError(validation) && (control.dirty || control.touched);\n    }\n\n    isControlTouched(controlName) {\n      const control = this.formGroup.controls[controlName];\n      return control.dirty || control.touched;\n    }\n\n  }\n\n  ChangePasswordComponent.ɵfac = function ChangePasswordComponent_Factory(t) {\n    return new (t || ChangePasswordComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.CommonService));\n  };\n\n  ChangePasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChangePasswordComponent,\n    selectors: [[\"app-change-password\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [1, \"card\", \"card-custom\", 3, \"formGroup\"], [1, \"card-header\", \"py-3\"], [1, \"card-title\", \"align-items-start\", \"flex-column\"], [1, \"card-label\", \"font-weight-bolder\", \"text-dark\"], [1, \"text-muted\", \"font-weight-bold\", \"font-size-sm\", \"mt-1\"], [1, \"card-toolbar\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"mr-2\", 3, \"disabled\", \"click\"], [\"type\", \"reset\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"form\"], [1, \"card-body\"], [1, \"form-group\", \"row\"], [1, \"col-xl-3\", \"col-lg-3\", \"col-form-label\", \"text-alert\"], [1, \"col-lg-9\", \"col-xl-8\"], [\"type\", \"password\", \"placeholder\", \"Current password\", \"autocomplete\", \"off\", \"formControlName\", \"currentPassword\", 1, \"form-control\", \"form-control-lg\", \"form-control-solid\", \"mb-2\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"password\", \"placeholder\", \"New password\", \"autocomplete\", \"off\", \"formControlName\", \"password\", 1, \"form-control\", \"form-control-lg\", \"form-control-solid\"], [\"type\", \"password\", \"placeholder\", \"Confirm password\", \"autocomplete\", \"off\", \"formControlName\", \"cPassword\", 1, \"form-control\", \"form-control-lg\", \"form-control-solid\"], [1, \"progress\", \"progress-modal\"], [\"role\", \"progressbar\", \"aria-valuenow\", \"100\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress-bar\", \"progress-bar-striped\", \"progress-bar-animated\", \"bg-primary\", 2, \"width\", \"100%\"], [1, \"invalid-feedback\"]],\n    template: function ChangePasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ChangePasswordComponent_ng_container_0_Template, 36, 21, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.user);\n      }\n    },\n    directives: [i4.NgIf, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName],\n    pipes: [i4.AsyncPipe],\n    styles: [\"\"]\n  });\n  return ChangePasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}