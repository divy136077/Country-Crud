{"ast":null,"code":"// language list\nimport { locale as enLang } from './modules/i18n/vocabs/en';\nimport { NavigationEnd } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./modules/i18n/translation.service\";\nimport * as i2 from \"./_metronic/partials/layout/splash-screen/splash-screen.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"./_metronic/shared/crud-table\";\nimport * as i5 from \"@ngx-translate/core\";\nimport * as i6 from \"./modules/auth\";\nconst _c0 = [\"root\", \"\"];\n\nfunction AppComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelement(1, \"mat-spinner\", 2);\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(translationService, splashScreenService, router, tableService, translate, loaderService) {\n      this.translationService = translationService;\n      this.splashScreenService = splashScreenService;\n      this.router = router;\n      this.tableService = tableService;\n      this.translate = translate;\n      this.loaderService = loaderService;\n      this.unsubscribe = [];\n      this.loading = this.loaderService.isLoadingSubject;\n      this.translationService.loadTranslations(enLang);\n    }\n\n    ngOnInit() {\n      const routerSubscription = this.router.events.subscribe(event => {\n        if (event instanceof NavigationEnd) {\n          // clear filtration paginations and others\n          this.tableService.setDefaults(); // hide splash screen\n\n          this.splashScreenService.hide(); // scroll to top on every route change\n\n          window.scrollTo(0, 0); // to display back the body content\n\n          setTimeout(() => {\n            document.body.classList.add('page-loaded');\n          }, 500);\n        }\n      });\n      this.unsubscribe.push(routerSubscription); // const language = localStorage.getItem('language');\n      // if (!language) {\n      //   this.translate.use('en');\n      // } else {\n      //   this.translate.use(language);\n      // }\n    }\n\n    ngOnDestroy() {\n      this.unsubscribe.forEach(sb => sb.unsubscribe());\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.TranslationService), i0.ɵɵdirectiveInject(i2.SplashScreenService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.TableExtendedService), i0.ɵɵdirectiveInject(i5.TranslateService), i0.ɵɵdirectiveInject(i6.AuthService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"body\", \"root\", \"\"]],\n    attrs: _c0,\n    decls: 4,\n    vars: 3,\n    consts: [[\"class\", \"loading-indicator\", 4, \"ngIf\"], [1, \"loading-indicator\"], [\"mode\", \"indeterminate\", \"color\", \"primary\", \"diameter\", \"60\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-splash-screen\");\n        i0.ɵɵtemplate(1, AppComponent_div_1_Template, 2, 0, \"div\", 0);\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelement(3, \"router-outlet\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 1, ctx.loading));\n      }\n    },\n    styles: [\"[_nghost-%COMP%]{height:100%;margin:0;font-family:Montserrat,sans-serif!important}.loading-indicator[_ngcontent-%COMP%]{position:fixed;z-index:999;height:2em;width:2em;overflow:show;margin:auto;inset:0}.loading-indicator[_ngcontent-%COMP%]:before{content:\\\"\\\";display:block;position:fixed;top:0;left:0;width:100%;height:100%;background-color:#0000004d}.mat-spinner[_ngcontent-%COMP%]{position:relative;margin-left:50%}\"],\n    changeDetection: 0\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}