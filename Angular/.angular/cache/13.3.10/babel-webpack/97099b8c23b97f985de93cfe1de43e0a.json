{"ast":null,"code":"import { USER_ENTITY } from 'src/app/constant/constant';\nimport * as i0 from \"@angular/core\";\nexport let ListValuePipe = /*#__PURE__*/(() => {\n  class ListValuePipe {\n    transform(value, field) {\n      if (field) {\n        const strArr = field.split('.');\n        let data = value;\n        const last = strArr.pop();\n\n        if (strArr.length > 0) {\n          if (strArr[0] == 'translations') {\n            if (value[strArr[0]][0] && value[strArr[0]][0][last]) {\n              data = value[strArr[0]][0][last];\n            } else {\n              data = '-';\n            }\n          } else if (value[strArr[0]] !== null && typeof value[strArr[0]] === 'object') {\n            data = value[strArr[0]][last];\n          }\n\n          return data;\n        } else if (strArr[0] == 'translations') {\n          if (value[strArr[0]][0] && value[strArr[0]][0][last]) {\n            data = value[strArr[0]][0][last];\n          } else {\n            data = '-';\n          }\n\n          return data;\n        } else {\n          if (value[field] !== null && value[field] !== undefined) {\n            if (field === USER_ENTITY.PAYED) {\n              data = value[field] === 0 ? 'No' : 'Yes';\n            } else {\n              data = value[field];\n            }\n          } else {\n            data = '-';\n          }\n\n          return data;\n        }\n      } else {\n        const strArr = value.split('.');\n\n        if (strArr.length > 1) {\n          return strArr[0];\n        } else {\n          if (value === 'dob') {\n            return 'Birth Date';\n          }\n\n          return value;\n        }\n      }\n    }\n\n  }\n\n  ListValuePipe.ɵfac = function ListValuePipe_Factory(t) {\n    return new (t || ListValuePipe)();\n  };\n\n  ListValuePipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"listValue\",\n    type: ListValuePipe,\n    pure: true\n  });\n  return ListValuePipe;\n})();","map":null,"metadata":{},"sourceType":"module"}