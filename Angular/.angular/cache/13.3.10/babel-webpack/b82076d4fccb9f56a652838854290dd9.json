{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./layout.service\";\nexport let LayoutInitService = /*#__PURE__*/(() => {\n  class LayoutInitService {\n    constructor(layout) {\n      this.layout = layout;\n    }\n\n    init() {\n      this.layout.initConfig();\n      this.preInitLayout(); // init base layout\n\n      this.initLayout();\n      this.initLoader(); // init header and subheader menu\n\n      this.initHeader();\n      this.initSubheader(); // init content\n\n      this.initContent(); // init aside and aside menu\n\n      this.initAside(); // init footer\n\n      this.initFooter();\n      this.initSkins();\n    } // init base layout\n\n\n    preInitLayout() {\n      const config = this.layout.getConfig();\n      const updatedConfig = Object.assign({}, config);\n      const subheaderFixed = this.layout.getProp('subheader.fixed');\n      const headerSelfFixedDesktop = this.layout.getProp('header.self.fixed.desktop');\n\n      if (subheaderFixed && headerSelfFixedDesktop) {\n        updatedConfig.subheader.style = 'solid';\n      } else {\n        updatedConfig.subheader.fixed = false;\n      }\n\n      this.layout.setConfigWithoutLocalStorageChanges(updatedConfig);\n    }\n\n    initLayout() {\n      const selfBodyBackgroundImage = this.layout.getProp('self.body.background-image');\n\n      if (selfBodyBackgroundImage) {\n        document.body.style.backgroundImage = `url(\"${selfBodyBackgroundImage}\")`;\n      }\n\n      const selfBodyClass = (this.layout.getProp('self.body.class') || '').toString();\n\n      if (selfBodyClass) {\n        const bodyClasses = selfBodyClass.split(' ');\n        bodyClasses.forEach(cssClass => document.body.classList.add(cssClass));\n      }\n    }\n\n    initLoader() {} // init header and subheader menu\n\n\n    initHeader() {\n      // Fixed header\n      const headerSelfFixedDesktop = this.layout.getProp('header.self.fixed.desktop');\n\n      if (headerSelfFixedDesktop) {\n        document.body.classList.add('header-fixed');\n        this.layout.setCSSClass('header', 'header-fixed');\n      } else {\n        document.body.classList.add('header-static');\n      }\n\n      const headerSelfFixedMobile = this.layout.getProp('header.self.fixed.mobile');\n\n      if (headerSelfFixedMobile) {\n        document.body.classList.add('header-mobile-fixed');\n        this.layout.setCSSClass('header_mobile', 'header-mobile-fixed');\n      } // Menu\n\n\n      const headerMenuSelfDisplay = this.layout.getProp('header.menu.self.display');\n      const headerMenuSelfLayout = this.layout.getProp('header.menu.self.layout');\n\n      if (headerMenuSelfDisplay) {\n        this.layout.setCSSClass('header_menu', `header-menu-layout-${headerMenuSelfLayout}`);\n\n        if (this.layout.getProp('header.menu.self.rootArrow')) {\n          this.layout.setCSSClass('header_menu', 'header-menu-root-arrow');\n        }\n      }\n\n      if (this.layout.getProp('header.self.width') === 'fluid') {\n        this.layout.setCSSClass('header_container', 'container-fluid');\n      } else {\n        this.layout.setCSSClass('header_container', 'container');\n      }\n    }\n\n    initSubheader() {\n      const subheaderDisplay = this.layout.getProp('subheader.display');\n\n      if (subheaderDisplay) {\n        document.body.classList.add('subheader-enabled');\n      } else {\n        return;\n      } // Fixed content head\n\n\n      const subheaderFixed = this.layout.getProp('subheader.fixed');\n      const headerSelfFixedDesktop = this.layout.getProp('header.self.fixed.desktop');\n\n      if (subheaderFixed && headerSelfFixedDesktop) {\n        document.body.classList.add('subheader-fixed');\n      }\n\n      const subheaderStyle = this.layout.getProp('subheader.style');\n\n      if (subheaderStyle) {\n        this.layout.setCSSClass('subheader', `subheader-${subheaderStyle}`);\n      }\n\n      if (this.layout.getProp('subheader.width') === 'fluid') {\n        this.layout.setCSSClass('subheader_container', 'container-fluid');\n      } else {\n        this.layout.setCSSClass('subheader_container', 'container');\n      }\n\n      if (this.layout.getProp('subheader.clear')) {\n        this.layout.setCSSClass('subheader', 'mb-0');\n      }\n    } // init content\n\n\n    initContent() {\n      if (this.layout.getProp('content.fit-top')) {\n        this.layout.setCSSClass('content', 'pt-0');\n      }\n\n      if (this.layout.getProp('content.fit-bottom')) {\n        this.layout.setCSSClass('content', 'pb-0');\n      }\n\n      if (this.layout.getProp('content.width') === 'fluid') {\n        this.layout.setCSSClass('content_container', 'container-fluid');\n      } else {\n        this.layout.setCSSClass('content_container', 'container');\n      }\n    } // init aside and aside menu\n\n\n    initAside() {\n      if (this.layout.getProp('aside.self.display') !== true) {\n        return;\n      } // Enable Aside\n\n\n      document.body.classList.add('aside-enabled'); // Fixed Aside\n\n      if (this.layout.getProp('aside.self.fixed')) {\n        document.body.classList.add('aside-fixed');\n        this.layout.setCSSClass('aside', 'aside-fixed');\n      } else {\n        document.body.classList.add('aside-static');\n      } // Check Aside\n\n\n      if (this.layout.getProp('aside.self.display') !== true) {\n        return;\n      } // Default fixed\n\n\n      if (this.layout.getProp('aside.self.minimize.default')) {\n        document.body.classList.add('aside-minimize');\n      }\n\n      if (this.layout.getProp('aside.self.minimize.hoverable')) {\n        document.body.classList.add('aside-minimize-hoverable');\n      } // Menu\n      // Dropdown Submenu\n\n\n      const asideMenuDropdown = this.layout.getProp('aside.menu.dropdown');\n\n      if (asideMenuDropdown) {\n        this.layout.setCSSClass('aside_menu', 'aside-menu-dropdown');\n        this.layout.setHTMLAttribute('aside_menu', 'data-menu-dropdown', '1');\n      } // Scrollable Menu\n\n\n      if (asideMenuDropdown !== true) {\n        this.layout.setHTMLAttribute('aside_menu', 'data-menu-scroll', '1');\n      } else {\n        this.layout.setHTMLAttribute('aside_menu', 'data-menu-scroll', '0');\n      }\n\n      const asideMenuSubmenuDropdownHoverTimout = this.layout.getProp('aside.menu.submenu.dropdown.hoverTimeout');\n\n      if (asideMenuSubmenuDropdownHoverTimout) {\n        this.layout.setHTMLAttribute('aside_menu', 'data-menu-dropdown-timeout', asideMenuSubmenuDropdownHoverTimout);\n      }\n    } // init footer\n\n\n    initFooter() {\n      // Fixed header\n      if (this.layout.getProp('footer.fixed') === true) {\n        document.body.classList.add('footer-fixed');\n      }\n\n      if (this.layout.getProp('footer.width') === 'fluid') {\n        this.layout.setCSSClass('footer_container', 'container-fluid');\n      } else {\n        this.layout.setCSSClass('footer_container', 'container');\n      }\n    }\n    /**\r\n     * Set the body class name based on page skin options\r\n     */\n\n\n    initSkins() {\n      const headerSelfTheme = this.layout.getProp('header.self.theme') || '';\n      const brandSelfTheme = this.layout.getProp('brand.self.theme') || '';\n      const asideSelfDisplay = this.layout.getProp('aside.self.display');\n\n      if (asideSelfDisplay === false) {\n        document.body.classList.add(`brand-${headerSelfTheme}`);\n      } else {\n        document.body.classList.add(`brand-${brandSelfTheme}`);\n      }\n    }\n\n  }\n\n  LayoutInitService.ɵfac = function LayoutInitService_Factory(t) {\n    return new (t || LayoutInitService)(i0.ɵɵinject(i1.LayoutService));\n  };\n\n  LayoutInitService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LayoutInitService,\n    factory: LayoutInitService.ɵfac,\n    providedIn: 'root'\n  });\n  return LayoutInitService;\n})();","map":null,"metadata":{},"sourceType":"module"}