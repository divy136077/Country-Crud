{"ast":null,"code":"import { NavigationCancel, NavigationEnd } from '@angular/router';\nimport { KTUtil } from '../../../../../assets/js/components/util';\nimport KTLayoutAsideToggle from '../../../../../assets/js/layout/base/aside-toggle';\nimport KTLayoutStickyCard from '../../../../../assets/js/layout/base/sticky-card';\nimport KTLayoutStretchedCard from '../../../../../assets/js/layout/base/stretched-card';\nimport KTLayoutBrand from '../../../../../assets/js/layout/base/brand';\nimport KTLayoutAside from '../../../../../assets/js/layout/base/aside';\nimport KTLayoutAsideMenu from '../../../../../assets/js/layout/base/aside-menu';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../_metronic/core\";\nimport * as i2 from \"@angular/router\";\nexport let ScriptsInitComponent = /*#__PURE__*/(() => {\n  class ScriptsInitComponent {\n    constructor(layout, router) {\n      this.layout = layout;\n      this.router = router;\n      this.asideSelfMinimizeToggle = false;\n      this.unsubscribe = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\n    }\n\n    ngOnInit() {\n      this.asideSelfMinimizeToggle = this.layout.getProp('aside.self.minimize.toggle');\n      this.routingChanges();\n    }\n\n    ngAfterViewInit() {\n      KTUtil.ready(() => {\n        // Init Brand Panel For Logo\n        KTLayoutBrand.init('kt_brand'); // Init Aside\n\n        KTLayoutAside.init('kt_aside'); // Init Aside Menu\n\n        KTLayoutAsideMenu.init('kt_aside_menu');\n\n        if (this.asideSelfMinimizeToggle) {\n          // Init Aside Menu Toggle\n          KTLayoutAsideToggle.init('kt_aside_toggle');\n        } // Init Sticky Card\n\n\n        KTLayoutStickyCard.init('kt_page_sticky_card'); // Init Stretched Card\n\n        KTLayoutStretchedCard.init('kt_page_stretched_card');\n      });\n    }\n\n    routingChanges() {\n      const routerSubscription = this.router.events.subscribe(event => {\n        if (event instanceof NavigationEnd || event instanceof NavigationCancel) {\n          const offCanvas = KTLayoutAside.getOffcanvas();\n\n          if (offCanvas) {\n            offCanvas.hide();\n          }\n\n          const btnQuickUserClose = document.getElementById('kt_quick_user_close');\n\n          if (btnQuickUserClose) {\n            btnQuickUserClose.click();\n          }\n        }\n      });\n      this.unsubscribe.push(routerSubscription);\n    }\n\n    ngOnDestroy() {\n      this.unsubscribe.forEach(sb => sb.unsubscribe());\n    }\n\n  }\n\n  ScriptsInitComponent.ɵfac = function ScriptsInitComponent_Factory(t) {\n    return new (t || ScriptsInitComponent)(i0.ɵɵdirectiveInject(i1.LayoutService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  ScriptsInitComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ScriptsInitComponent,\n    selectors: [[\"app-scripts-init\"]],\n    decls: 0,\n    vars: 0,\n    template: function ScriptsInitComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return ScriptsInitComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}