{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { ConfirmPasswordValidator } from '../registration/confirm-password.validator';\nimport { API_ROUTES } from 'src/app/constant/constant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../auth\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/_metronic/core/services/common.service\";\nimport * as i5 from \"ngx-toastr\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/common\";\n\nfunction SetPasswordComponent_ng_container_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 17);\n    i0.ɵɵelementStart(2, \"div\", 18);\n    i0.ɵɵtext(3, \"S 'Passsword' and 'Confirm Password' didn't match. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction SetPasswordComponent_ng_template_29_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 17);\n    i0.ɵɵelementStart(2, \"div\", 18);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const message_r4 = i0.ɵɵnextContext().message;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", message_r4, \" \");\n  }\n}\n\nfunction SetPasswordComponent_ng_template_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, SetPasswordComponent_ng_template_29_ng_container_0_Template, 4, 1, \"ng-container\", 12);\n  }\n\n  if (rf & 2) {\n    const control_r3 = ctx.control;\n    const validation_r5 = ctx.validation;\n    i0.ɵɵproperty(\"ngIf\", control_r3.hasError(validation_r5) && (control_r3.dirty || control_r3.touched));\n  }\n}\n\nconst _c0 = function (a2) {\n  return {\n    validation: \"required\",\n    message: \"Password is required\",\n    control: a2\n  };\n};\n\nconst _c1 = \"Contains 8-15 characters, at least one number, at least one upper character, at least one\\n            lower\\n            character, at least one special character.\";\n\nconst _c2 = function (a2) {\n  return {\n    validation: \"pattern\",\n    message: _c1,\n    control: a2\n  };\n};\n\nconst _c3 = function (a2) {\n  return {\n    validation: \"required\",\n    message: \"Confirm Password is required\",\n    control: a2\n  };\n};\n\nconst _c4 = function (a2) {\n  return {\n    validation: \"minlength\",\n    message: \"Confirm Password should have at least 3 symbols\",\n    control: a2\n  };\n};\n\nconst _c5 = function (a2) {\n  return {\n    validation: \"maxLength\",\n    message: \"Confirm Password should have maximum 100 symbols\",\n    control: a2\n  };\n};\n\nexport let SetPasswordComponent = /*#__PURE__*/(() => {\n  class SetPasswordComponent {\n    constructor(userService, fb, router, commonService, toastr, route) {\n      this.userService = userService;\n      this.fb = fb;\n      this.router = router;\n      this.commonService = commonService;\n      this.toastr = toastr;\n      this.route = route;\n      this.subscriptions = [];\n      this.moduleNameServiceRoute = API_ROUTES.USER;\n      this.loadForm();\n      this.isLoading$ = this.userService.isLoadingSubject.asObservable();\n      this.token = this.route.snapshot.params.token;\n    } // convenience getter for easy access to form fields\n\n\n    get f() {\n      return this.formGroup.controls;\n    }\n\n    ngOnInit() {\n      const sb = this.userService.currentUserSubject.asObservable().pipe(first(user => !!user)).subscribe(user => {\n        this.user = Object.assign({}, user);\n        this.firstUserState = Object.assign({}, user);\n      });\n      this.subscriptions.push(sb);\n    }\n\n    ngOnDestroy() {\n      this.subscriptions.forEach(sb => sb.unsubscribe());\n    }\n\n    loadForm() {\n      this.formGroup = this.fb.group({\n        password: ['', Validators.compose([Validators.required, Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\" !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\"])[A-Za-z\\d\" !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\"]{8,15}$/)])],\n        cPassword: ['', Validators.compose([Validators.required, Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\" !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\"])[A-Za-z\\d\" !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\"]{8,15}$/)])]\n      }, {\n        validator: ConfirmPasswordValidator.MatchPassword\n      });\n    }\n\n    save() {\n      this.formGroup.markAllAsTouched();\n\n      if (!this.formGroup.valid) {\n        return;\n      }\n\n      const obj = {\n        newPassword: this.formGroup.value.password,\n        token: this.token\n      };\n      this.commonService.resetPassword(obj, this.moduleNameServiceRoute).subscribe(res => {\n        if (res.status) {\n          // this.router.navigateByUrl('/auth/login');\n          this.router.navigate(['/auth/login']).then(() => {\n            this.toastr.success(res.message, 'Success!');\n          });\n        } else {\n          if (res.message) {\n            this.toastr.error(res.message, 'Error!');\n          }\n        }\n      }, err => {}); // this.user.password = this.formGroup.value.password;\n      // this.userService.isLoadingSubject.next(true);\n      // setTimeout(() => {\n      //   this.userService.currentUserSubject.next(Object.assign({}, this.user));\n      //   this.userService.isLoadingSubject.next(false);\n      // }, 2000);\n    }\n\n    cancel() {\n      this.user = Object.assign({}, this.firstUserState);\n      this.loadForm();\n    } // helpers for View\n\n\n    isControlValid(controlName) {\n      const control = this.formGroup.controls[controlName];\n      return control.valid && (control.dirty || control.touched);\n    }\n\n    isControlInvalid(controlName) {\n      const control = this.formGroup.controls[controlName];\n      return control.invalid && (control.dirty || control.touched);\n    }\n\n    controlHasError(validation, controlName) {\n      const control = this.formGroup.controls[controlName];\n      return control.hasError(validation) && (control.dirty || control.touched);\n    }\n\n    isControlTouched(controlName) {\n      const control = this.formGroup.controls[controlName];\n      return control.dirty || control.touched;\n    }\n    /**\r\n     * Toggle Password\r\n     */\n\n\n    togglePassword() {\n      this.show = !this.show;\n    }\n    /**\r\n     * Toggle Password\r\n     */\n\n\n    toggleconfirmPassword() {\n      this.showcnf = !this.showcnf;\n    }\n\n  }\n\n  SetPasswordComponent.ɵfac = function SetPasswordComponent_Factory(t) {\n    return new (t || SetPasswordComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.CommonService), i0.ɵɵdirectiveInject(i5.ToastrService), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n\n  SetPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SetPasswordComponent,\n    selectors: [[\"app-set-password\"]],\n    decls: 31,\n    vars: 26,\n    consts: [[1, \"bottom-logo\", \"text-center\", \"mb-5\"], [\"src\", \"assets/media/logos/logo.png\", \"alt\", \"Logo\"], [1, \"login-form\", \"login-signin\"], [1, \"pb-3\", \"pt-lg-0\", \"pt-5\"], [1, \"font-weight-bolder\", \"text-white\", \"font-size-h4\", \"font-size-h1-lg\"], [1, \"text-muted\", \"font-weight-bold\", \"font-size-sm\", \"mt-1\"], [1, \"form\", \"form-label-left\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"password-input\", \"pt-1\"], [\"placeholder\", \"Passsword\", \"name\", \"password\", \"formControlName\", \"password\", \"autocomplete\", \"off\", 1, \"form-control\", \"form-control-solid\", \"h-auto\", \"py-4\", \"px-6\", \"rounded-lg\", 3, \"type\"], [1, \"eye-icon\", 3, \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"placeholder\", \"Confirm password\", \"name\", \"cPassword\", \"autocomplete\", \"off\", \"formControlName\", \"cPassword\", 1, \"form-control\", \"form-control-solid\", \"h-auto\", \"py-4\", \"px-6\", \"rounded-lg\", 3, \"type\"], [4, \"ngIf\"], [1, \"form-group\", \"d-flex\", \"flex-wrap\", \"pb-lg-0\", \"pb-3\"], [\"type\", \"submit\", \"id\", \"kt_login_signup_submit\", 1, \"btn\", \"login-btn\", \"font-weight-bolder\", \"font-size-h6\", \"px-8\", \"py-4\", \"my-3\", \"mr-3\", 3, \"click\"], [\"routerLink\", \"/auth/login\", \"type\", \"button\", \"id\", \"kt_login_signup_cancel\", 1, \"btn\", \"btn-light-primary\", \"font-weight-bolder\", \"font-size-h6\", \"px-8\", \"py-4\", \"my-3\"], [\"formError\", \"\"], [1, \"fv-plugins-message-container\"], [1, \"fv-help-block\"]],\n    template: function SetPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainerStart(0);\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelement(2, \"img\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"h3\", 4);\n        i0.ɵɵtext(6, \" Change Password \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"span\", 5);\n        i0.ɵɵtext(8, \"Set your account password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function SetPasswordComponent_Template_form_ngSubmit_9_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵelementStart(10, \"div\", 7);\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵelementStart(12, \"mat-icon\", 9);\n        i0.ɵɵlistener(\"click\", function SetPasswordComponent_Template_mat_icon_click_12_listener() {\n          return ctx.togglePassword();\n        });\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementContainer(14, 10);\n        i0.ɵɵelementContainer(15, 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 7);\n        i0.ɵɵelement(17, \"input\", 11);\n        i0.ɵɵelementStart(18, \"mat-icon\", 9);\n        i0.ɵɵlistener(\"click\", function SetPasswordComponent_Template_mat_icon_click_18_listener() {\n          return ctx.toggleconfirmPassword();\n        });\n        i0.ɵɵtext(19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementContainer(20, 10);\n        i0.ɵɵelementContainer(21, 10);\n        i0.ɵɵelementContainer(22, 10);\n        i0.ɵɵtemplate(23, SetPasswordComponent_ng_container_23_Template, 4, 0, \"ng-container\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 13);\n        i0.ɵɵelementStart(25, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function SetPasswordComponent_Template_button_click_25_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵtext(26, \" Save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"a\", 15);\n        i0.ɵɵtext(28, \" Cancel \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(29, SetPasswordComponent_ng_template_29_Template, 1, 1, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(30);\n\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"type\", ctx.show ? \"text\" : \"password\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(!ctx.show ? \"visibility_off\" : \"visibility\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r1)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(16, _c0, ctx.formGroup.controls[\"password\"]));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r1)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(18, _c2, ctx.formGroup.controls[\"password\"]));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"type\", ctx.showcnf ? \"text\" : \"password\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(!ctx.showcnf ? \"visibility_off\" : \"visibility\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r1)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(20, _c3, ctx.formGroup.controls[\"cPassword\"]));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r1)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(22, _c4, ctx.formGroup.controls[\"cPassword\"]));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r1)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(24, _c5, ctx.formGroup.controls[\"cPassword\"]));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.formGroup.controls[\"cPassword\"].errors && ctx.formGroup.controls[\"cPassword\"].errors.ConfirmPassword);\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i6.MatIcon, i7.NgTemplateOutlet, i7.NgIf, i3.RouterLinkWithHref],\n    styles: [\".login.login-1[_ngcontent-%COMP%]   .login-aside[_ngcontent-%COMP%]   .aside-img[_ngcontent-%COMP%]{min-height:450px}.login.login-1[_ngcontent-%COMP%]   .login-signin[_ngcontent-%COMP%], .login.login-1[_ngcontent-%COMP%]   .login-signup[_ngcontent-%COMP%], .login.login-1[_ngcontent-%COMP%]   .login-forgot[_ngcontent-%COMP%], .login.login-1.login-signin-on[_ngcontent-%COMP%]   .login-signup[_ngcontent-%COMP%]{display:none}.login.login-1.login-signin-on[_ngcontent-%COMP%]   .login-signin[_ngcontent-%COMP%]{display:block}.login.login-1.login-signin-on[_ngcontent-%COMP%]   .login-forgot[_ngcontent-%COMP%]{display:none}.login.login-1.login-signup-on[_ngcontent-%COMP%]   .login-signup[_ngcontent-%COMP%]{display:block}.login.login-1.login-signup-on[_ngcontent-%COMP%]   .login-signin[_ngcontent-%COMP%], .login.login-1.login-signup-on[_ngcontent-%COMP%]   .login-forgot[_ngcontent-%COMP%], .login.login-1.login-forgot-on[_ngcontent-%COMP%]   .login-signup[_ngcontent-%COMP%], .login.login-1.login-forgot-on[_ngcontent-%COMP%]   .login-signin[_ngcontent-%COMP%]{display:none}.login.login-1.login-forgot-on[_ngcontent-%COMP%]   .login-forgot[_ngcontent-%COMP%]{display:block}@media (min-width: 992px){.login.login-1[_ngcontent-%COMP%]   .login-aside[_ngcontent-%COMP%]{width:100%;max-width:700px}.login.login-1[_ngcontent-%COMP%]   .login-content[_ngcontent-%COMP%]{width:100%;max-width:500px}.login.login-1[_ngcontent-%COMP%]   .login-content[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]{width:100%;max-width:450px}}@media (min-width: 992px) and (max-width: 1399.98px){.login.login-1[_ngcontent-%COMP%]   .login-aside[_ngcontent-%COMP%]{width:100%;max-width:450px}}@media (max-width: 991.98px){.login.login-1[_ngcontent-%COMP%]   .login-content[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]{width:100%;max-width:400px}}@media (max-width: 575.98px){.login.login-1[_ngcontent-%COMP%]   .aside-img[_ngcontent-%COMP%]{min-height:300px!important;background-size:400px}.login.login-1[_ngcontent-%COMP%]   .login-content[_ngcontent-%COMP%]   .login-form[_ngcontent-%COMP%]{width:100%;max-width:100%}}[_nghost-%COMP%]{width:100%}@media (min-width: 992px){[_nghost-%COMP%]   .login-form[_ngcontent-%COMP%]{width:100%;max-width:450px;margin:0 auto}[_nghost-%COMP%]   .login-form[_ngcontent-%COMP%]   .mat-form-field[_ngcontent-%COMP%]{width:100%}}.password-input[_ngcontent-%COMP%]{position:relative}.password-input[_ngcontent-%COMP%]   .eye-icon[_ngcontent-%COMP%]{position:absolute;right:11px;top:16px;cursor:pointer;color:#b5b5c3}.login-form[_ngcontent-%COMP%]{background:#61605c80;padding:19px;border-radius:18px}.login-form[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]{background-color:#2d2d2d;border:none;color:#b5b5c3}.login-form[_ngcontent-%COMP%]   .login-btn[_ngcontent-%COMP%]{background:#3699ff;border-color:#3699ff;color:#fff;width:27%}.text-white[_ngcontent-%COMP%]{color:#fff!important}.btn-light-primary[_ngcontent-%COMP%]{color:gray}\"]\n  });\n  return SetPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}