{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { SettingTypeAddEditComponent } from './setting-type-add-edit/setting-type-add-edit.component';\nimport { SettingTypeComponent } from './setting-type.component';\nimport { SettingTypeListComponent } from './setting-type-list/setting-type-list.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { RouterModule } from '@angular/router';\nimport { NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { CoreModule } from 'src/app/_metronic/core';\nimport { PartialsModule } from 'src/app/_metronic/partials/partials.module';\nimport { CRUDTableModule } from 'src/app/_metronic/shared/crud-table';\nimport { AuthGuard } from '../auth/_services/auth.guard';\nimport { ModuleGuard } from '../auth/_services/module.guard';\nimport { TranslationModule } from '../i18n/translation.module';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  component: SettingTypeComponent,\n  data: {\n    breadcrumb: 'PAGES.SETTING.SETTING'\n  },\n  children: [{\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'setting-type'\n  }, {\n    path: '',\n    component: SettingTypeListComponent,\n    canActivate: [AuthGuard, ModuleGuard],\n    data: {\n      breadcrumb: null,\n      'moduleName': ['setting-type', 'setting-type/view']\n    }\n  }, {\n    path: 'add',\n    component: SettingTypeAddEditComponent,\n    canActivate: [AuthGuard, ModuleGuard],\n    data: {\n      breadcrumb: 'PAGES.SETTING.ADD',\n      'moduleName': ['setting-type', 'setting-type/create']\n    }\n  }, {\n    path: 'update/:id',\n    component: SettingTypeAddEditComponent,\n    canActivate: [AuthGuard, ModuleGuard],\n    data: {\n      breadcrumb: 'PAGES.SETTING.UPDATE',\n      'moduleName': ['setting-type', 'setting-type/update']\n    }\n  }]\n}];\nexport let SettingTypeModule = /*#__PURE__*/(() => {\n  class SettingTypeModule {}\n\n  SettingTypeModule.ɵfac = function SettingTypeModule_Factory(t) {\n    return new (t || SettingTypeModule)();\n  };\n\n  SettingTypeModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: SettingTypeModule\n  });\n  SettingTypeModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[NgbNavModule, CommonModule, RouterModule.forChild(routes), PartialsModule, MatCheckboxModule, InlineSVGModule, MatRadioModule, MatButtonModule, MatDividerModule, TranslationModule, ReactiveFormsModule, FormsModule, MatInputModule, MatTooltipModule, CoreModule, CRUDTableModule]]\n  });\n  return SettingTypeModule;\n})();","map":null,"metadata":{},"sourceType":"module"}