{"ast":null,"code":"export function isUrlSymbol(url) {\n  return url.charAt(0) === '#' || url.indexOf('.svg#') > -1;\n}\nexport function isSvgSupported() {\n  return typeof SVGRect !== 'undefined';\n}\nexport function createSymbolSvg(renderer, svg, symbolId) {\n  var symbol = svg.querySelector(\"[id=\\\"\" + symbolId + \"\\\"]\");\n\n  if (!symbol) {\n    throw new Error(\"Symbol \\\"\" + symbolId + \"\\\" not found\");\n  }\n\n  var elSvg = renderer.createElement('svg', 'svg');\n  renderer.appendChild(elSvg, symbol);\n  var elSvgUse = renderer.createElement('use', 'svg');\n  renderer.setAttribute(elSvgUse, 'href', \"#\" + symbolId, 'xlink');\n  renderer.appendChild(elSvg, elSvgUse);\n  return elSvg;\n}\nexport function removeAttributes(element, attrs) {\n  for (var i = 0; i < attrs.length; i++) {\n    var elAttr = element.getAttribute(attrs[i]);\n\n    if (elAttr) {\n      element.removeAttribute(attrs[i]);\n    }\n  }\n\n  var innerEls = element.getElementsByTagName('*');\n\n  for (var i = 0; i < innerEls.length; i++) {\n    removeAttributes(innerEls[i], attrs);\n  }\n}\nexport function setAttributes(element, attrs) {\n  for (var attr in attrs) {\n    element.setAttribute(attr, attrs[attr]);\n  }\n}","map":null,"metadata":{},"sourceType":"module"}